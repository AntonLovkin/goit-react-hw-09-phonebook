{"version":3,"sources":["redux/contacts/contacts-operations.js","components/Contact-form/Contact-form.js","redux/contacts/contacts-selectors.js","components/Filter.js","components/Contacts/Contacts-list.js","views/ContactsView.js"],"names":["name","number","dispatch","contact","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","a","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","ContactForm","state","handleChange","target","value","setState","handleSubmit","evt","preventDefault","props","onSubmit","reset","this","fetchContacts","className","onChange","placeholder","type","pattern","title","required","Component","connect","contactsOperations","getFilter","contacts","filter","getFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","includes","contactsSelectors","changeFilter","filteredContacts","onDeleteContact","console","log","map","onClick","ContactsView"],"mappings":"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","file":"static/js/3.62903b1a.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError\r\n} from './contacts-actions'\r\n\r\n// axios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n\r\n        dispatch(fetchContactsSuccess(data))\r\n\r\n    } catch (error) {\r\n        dispatch(fetchContactsError(error))\r\n    }\r\n\r\n    // axios\r\n    //     .get(`/contacts`)\r\n    //     .then(({data}) => dispatch(fetchContactsSuccess(data)))\r\n    //     .catch(error => dispatch(fetchContactsError(error)))\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n        // completed: false,\r\n    };\r\n      \r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)))\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error => dispatch(deleteContactError(error)))\r\n};\r\n\r\nexport default {addContact, deleteContact, fetchContacts}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\nimport \"../base.css\";\nimport \"../Contact-form/contact-form.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  componentDidMount() {\n    this.props.fetchContacts()\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const { name, number } = this.state;\n \n    this.props.onSubmit(name, number);\n   \n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className=\"contacts-form\" onSubmit={this.handleSubmit}>\n        <label className=\"label\">\n          Name\n          <input\n            className=\"input\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\" \"\n            required\n          />\n        </label>\n\n        <label className=\"label\">\n          Number\n          <input\n            className=\"input\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className=\"button add\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts())\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { createSelector } from \"reselect\";\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\n// const getFilteredContacts = state => {\r\n//     const contacts = getAllContacts(state);\r\n//     const filter = getFilter(state);\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// }\r\n\r\nconst getFilteredContacts = createSelector(\r\n    [getAllContacts, getFilter], (contacts, filter) => {\r\n      const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );  \r\n    })\r\n\r\nexport default { getFilter, getFilteredContacts }","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {changeFilter} from '../redux/contacts/contacts-actions'\nimport contactsSelectors from '../redux/contacts/contacts-selectors'\n\nconst Filter = ({ value, onChange }) => (\n   <div className=\"filter\">\n    <label className=\"label\">\n      Find contacts by name:\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      >\n      </input>\n    </label>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (evt) => dispatch(changeFilter(evt.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from '../../redux/contacts/contacts-operations'\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\nimport \"./contacts-list.css\";\n\nconst ContactsList = ({ filteredContacts, onDeleteContact }) => (\n  console.log('re-render') || \n  <ul className=\"contact-list\">\n    {filteredContacts.map(({ name, number, id }) => (\n      <li key={id} className=\"contact-item\">\n        <span className=\"contact-name\">{name} : </span>\n        <span className=\"contact-number\"> {number}</span>\n        <button\n          className=\"button contact-item__button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\n// const getFilteredContacts = (allContacts, filter) => {\n  \n//   // const { filter, contacts } = this.state;\n\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n\nconst mapStateToProps = (state) => ({\n  filteredContacts: contactsSelectors.getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import ContactForm from '../components/Contact-form';\r\nimport Filter from '../components/Filter';\r\nimport ContactsList from '../components/Contacts';\r\n\r\nconst ContactsView = () => {\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n\r\n        <h2>Filter</h2>\r\n        <Filter />\r\n\r\n        <h2>Contacts</h2>\r\n        <ContactsList />\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport default ContactsView;\r\n\r\n\r\n//------------------------------------------------\r\n// const barStyles = {\r\n//   display: 'flex',\r\n//   alignItems: 'flex-end',\r\n//   marginBottom: 20,\r\n// };\r\n\r\n// class ContactsView extends Component {\r\n  // state = {\r\n  //   showModal: true,\r\n  // };\r\n\r\n  // componentDidMount() {\r\n  //   this.props.fetchTodos();\r\n  // }\r\n\r\n  // toggleModal = () => {\r\n  //   this.setState(({ showModal }) => ({\r\n  //     showModal: !showModal,\r\n  //   }));\r\n  // };\r\n\r\n//   render() {\r\n//     // const { showModal } = this.state;\r\n\r\n//     return (\r\n//       <>\r\n//         {/* <div style={barStyles}> */}\r\n//           {/* <Filter />\r\n//           <Stats /> */}\r\n//           {/* <IconButton onClick={this.toggleModal} aria-label=\"Добавить todo\">\r\n//             <AddIcon width=\"40\" height=\"40\" fill=\"#fff\" />\r\n//           </IconButton> */}\r\n\r\n//           {/* {this.props.isLoadingTodos && <h1>Загружаем...</h1>}\r\n//         </div> */}\r\n\r\n//         {/* <TodoList /> */}\r\n\r\n//         <h1>Phonebook</h1>\r\n//         <ContactForm />\r\n\r\n//         <h2>Filter</h2>\r\n//         <Filter />\r\n\r\n//         <h2>Contacts</h2>\r\n//         <ContactsList />\r\n\r\n//         {/* {showModal && (\r\n//           <Modal onClose={this.toggleModal}>\r\n//             <TodoEditor onSave={this.toggleModal} />\r\n//           </Modal>\r\n//         )} */}\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = state => ({\r\n//   isLoadingTodos: todosSelectors.getLoading(state),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   fetchTodos: () => dispatch(todosOperations.fetchTodos()),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n// export default ContactsView;"],"sourceRoot":""}