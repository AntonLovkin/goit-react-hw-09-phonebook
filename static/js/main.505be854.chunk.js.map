{"version":3,"sources":["redux/auth/auth-operations.js","redux/contacts/contacts-actions.js","redux/auth/auth-actions.js","UserMenu/Navigation.js","redux/auth/auth-selectors.js","UserMenu/UserMenu.js","UserMenu/AuthNav.js","UserMenu/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","views/RegisterView.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","logOut","logoutRequest","logoutSuccess","error","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","exact","style","activeStyle","state","isAuthenticated","user","email","container","alignItems","avatar","marginRight","name","UserMenu","useDispatch","onLogout","useCallback","authOperations","useSelector","authSelectors","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","isLoggedIn","PrivateRoute","redirectTo","children","routeProps","PublicRoute","getIsAuthenticated","restricted","form","width","label","flexDirection","marginBottom","RegisterView","useState","password","setState","handleChange","target","value","prev","onSubmit","e","preventDefault","autoComplete","onChange","ContactsView","lazy","LoginView","App","useEffect","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","items","createReducer","_","payload","map","includes","alert","filter","id","combineReducers","initialUserState","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.505be854.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    \r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data))\r\n\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    \r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data))\r\n\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    axios.post('/users/logout');\r\n    \r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess())\r\n\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistToken },\r\n  } = getState();\r\n\r\n  if (!persistToken) {\r\n    return\r\n  }\r\n\r\n  token.set(persistToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data))\r\n  } catch (error) {\r\n    \r\n    dispatch(authActions.getCurrentUserError(error.message))\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };","// import types from \"./contacts-types\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n// export default {addContactRequest, addContactSuccess, addContactError, deleteContact, changeFilter };","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink\r\n      to=\"/contacts\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Контакты\r\n    </NavLink>\r\n      \r\n  </nav>\r\n);\r\n\r\nexport default Navigation;","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.email;\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    getUsername\r\n}","import {useCallback} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\nimport authOperations from '../redux/auth/auth-operations';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   name: authSelectors.getUsername(state),\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = useCallback(() => {\r\n    dispatch(authOperations.logOut());\r\n  }, [dispatch]);\r\n\r\n  const name = useSelector(authSelectors.getUsername);\r\n\r\n  return (\r\n  <div style={styles.container}>\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n  );\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(AppBar);\r\n\r\nexport default function AppBar() {\r\n\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <header style={styles.header}>\r\n    \r\n      {isLoggedIn\r\n        ?\r\n        <>\r\n          <Navigation />\r\n          <UserMenu />\r\n        \r\n        </>\r\n        : <AuthNav />}\r\n        \r\n    </header>\r\n  );\r\n};","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nexport default function PrivateRoute ({\r\n    isAuthenticated,\r\n    redirectTo,\r\n    children,\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsAuthenticated)\r\n    return (\r\n        <Route {...routeProps}>   \r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>)\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//     isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  getIsAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return <Route {...routeProps}>\r\n    {isLoggedIn && routeProps.restricted ? ( <Redirect to={redirectTo} />) :children}\r\n  </Route>\r\n};\r\n\r\nexport default PublicRoute;\r\n    // render={props =>\r\n    //   isAuthenticated && routeProps.restricted ? (\r\n    //     <Redirect to={redirectTo} />\r\n    //   ) : (\r\n    //     <Component {...props} />\r\n    //   )\r\n    // }\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n//  connect(mapStateToProps)(PublicRoute);","  \r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operations';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\n// const mapDispatchToProps = {\r\n//   onRegister: authOperations.register,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(RegisterView);\r\n\r\nexport default function RegisterView() {\r\n  const initialState = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState(initialState);\r\n  const onRegister = (data) => dispatch(authOperations.register(data));\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onRegister(state);\r\n\r\n    setState(prev => ({\r\n      ...prev,\r\n      name: '',\r\n      email: '',\r\n      password: ''\r\n    }))\r\n  };\r\n\r\n  const { name, email, password } = state;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Страница регистрации</h1>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        style={styles.form}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label style={styles.label}>\r\n          Имя\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Почта\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Пароль\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Зарегистрироваться</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { Switch, Route  } from 'react-router-dom';\nimport AppBar from './UserMenu/AppBar';\nimport { lazy, Suspense, useEffect } from 'react';\nimport authOperations from './redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport RegisterView from './views/RegisterView';\n\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n// const RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\n\n\n// const mapDispatchToProps = {\n//   onGetCurrentUser: authOperations.getCurrentUser\n// }\n\n//  componentDidMount() {\n//     this.props.onGetCurrentUser();\n// }\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser())\n  }, [dispatch]);\n\n    return (\n      <>\n        <AppBar />\n      \n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/register\" restricted redirectTo='/contacts'>\n                <RegisterView />\n            </PublicRoute>\n            <PublicRoute exact path=\"/login\" restricted redirectTo='/contacts'>\n                <LoginView />\n            </PublicRoute>\n            {/* <PublicRoute path=\"/login\" restricted component={LoginView} redirectTo='/contacts'/> */}\n            <PrivateRoute path=\"/contacts\" redirectTo='/login'>\n              <ContactsView/>\n            </PrivateRoute>\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n    addContactSuccess,\n    deleteContactSuccess,\n    fetchContactsSuccess,\n    changeFilter\n} from './contacts-actions'\n// import actions from \"./contacts-actions\";\n// import types from \"./contacts-types\";\n\n// console.log(actions.addContact.type);\n\nconst items = createReducer(([]), {\n  [fetchContactsSuccess]: (_, {payload}) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    if (state.map(({ name }) => name).includes(payload.name)) {\n      alert(`${payload.name} is already in contacts`);\n      // console.log(payload.name);\n      return \n    } \n      return [payload, ...state];\n    \n  },\n\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {})\n\nexport default combineReducers({\n  items,\n  filter,\n  error\n});\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, {payload}) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, {payload}) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n   [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport authReducer from \"./auth/auth-reducer\";\n\n// const myMiddleware = store => next => action => {\n//   console.log('My middleware');\n// }\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n logger\n  // myMiddleware\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default {store, persistor};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}